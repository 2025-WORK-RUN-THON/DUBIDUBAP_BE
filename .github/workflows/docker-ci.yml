name: CI/CD - Docker Build and Deploy

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "21"

      - name: Generate application-prod.yml
        run: |
          mkdir -p ./src/main/resources
          cat << 'EOF' > ./src/main/resources/application-prod.yml
          ${{ secrets.APPLICATION_PROD_YML }}
          EOF
        shell: bash

      - name: Build Jar
        run: ./gradlew clean bootJar --no-daemon

      - name: Verify prod config packaged
        run: |
          JAR=$(ls -1 build/libs/*-SNAPSHOT.jar | grep -v plain | head -n 1)
          echo "Checking JAR: $JAR"
          jar tf "$JAR" | grep -q 'BOOT-INF/classes/application-prod.yml'

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}/server

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  deploy:
    if: github.ref == 'refs/heads/main'
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Deploy info
        run: |
          echo "Deploy phase placeholder. Use your infra (e.g., AWS ECS, EC2, Kubernetes) to pull ghcr.io/${{ github.repository }}/server:latest and run docker-compose with .env from GitHub Secrets."
